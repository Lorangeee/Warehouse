This is my first machine learning project and also my first try on Github.

Dog Classifier
  
  I will build a Neural Network to learn classify dogs in a picture.
  --------
  NN Structure
    #1
    L = 2, there are 2 hidden layers in the neural network, I wanna start it with a simple version, also not to push for myself. :)
    n1 = 10, there are 10 units in the second layer.
    n2 = 1, the output layer has only one unit.
    n0 = 75000, the input units, I will flatten the original images into a vector, and exclude the RGB channel, only keep greyscaled image, which means that I have to preprocess my input data.
    By doing so, I can simplyfier the learning and save time.
    
    z[l] = w[l] * a[l-1] + b[l] , the linear function I will use;
    a[l] = sigmoid( z[l] ), the activation function that I will use.
  --------
  
  Data Set
    'Kaggle Cats and Dogs Dataset' is the data set I will use to train and test my model. It has 12497 cat images and 12499 dog images.
    I will choose 22500 pictures from that data sets for training, and the rest for testing.  

  --------
  
  Algorithm Breakdown
    for i in iterator:
      input -> linearforward -> sigmoid -> linearforward -> sigmoid -> output
      loss -> cost -> backpropagation1 -> backpropagation2 -> simutaniously update W1,b1
    
    using learned parameters to imply on trainning set
    
  --------
